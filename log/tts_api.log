2024-07-29 14:58:50,582 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 14:58:50,582 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:00:27,752 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:00:27,752 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:01:53,881 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:01:53,882 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:02:11,523 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:02:11,523 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:02:17,634 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:20,657 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:21,124 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:21,310 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:21,478 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:21,622 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:21,801 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:21,987 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:22,177 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:22,357 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:22,536 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:22,704 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:22,886 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:23,415 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:23,621 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:23,824 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:23,986 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:24,168 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:24,332 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:24,520 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:24,694 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:24,875 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:25,044 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:25,234 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:25,438 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:25,621 | INFO | health_check.py | 29 | session | /session
2024-07-29 15:02:35,773 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:02:35,776 | DEBUG | tts.py | 121 | generate | using model: 
TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)
2024-07-29 15:02:35,777 | ERROR | tts.py | 73 | _generate | can only concatenate str (not "UUID") to str
2024-07-29 15:02:35,777 | INFO | tts.py | 124 | generate | /text-to-speech complete
2024-07-29 15:04:07,405 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:04:07,405 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:04:25,558 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:04:25,558 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:05:42,259 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:05:42,259 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:05:54,943 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:05:54,943 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:05:55,135 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:05:55,136 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:05:57,400 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:05:57,400 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:06:47,313 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:06:47,313 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:06:57,575 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:06:57,578 | DEBUG | tts.py | 121 | generate | using model: 
TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)
2024-07-29 15:06:57,579 | ERROR | tts.py | 73 | _generate | 'str' object has no attribute 'uppper'
2024-07-29 15:06:57,579 | ERROR | tts.py | 133 | generate | generate wave file failed.
2024-07-29 15:07:53,945 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:07:53,945 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:08:14,988 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:08:14,991 | DEBUG | tts.py | 121 | generate | using model: 
TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)
2024-07-29 15:08:19,450 | INFO | tts.py | 127 | generate | /text-to-speech complete
2024-07-29 15:09:51,108 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:09:51,109 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:10:00,501 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:10:00,504 | DEBUG | tts.py | 121 | generate | using model: 
TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)
2024-07-29 15:10:04,325 | INFO | tts.py | 127 | generate | /text-to-speech complete
2024-07-29 15:12:29,078 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:12:29,081 | DEBUG | tts.py | 121 | generate | using model: 
TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)
2024-07-29 15:12:29,200 | INFO | tts.py | 127 | generate | /text-to-speech complete
2024-07-29 15:12:42,087 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:12:42,090 | DEBUG | tts.py | 121 | generate | using model: 
TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)
2024-07-29 15:12:42,211 | INFO | tts.py | 127 | generate | /text-to-speech complete
2024-07-29 15:12:43,174 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:12:43,177 | DEBUG | tts.py | 121 | generate | using model: 
TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)
2024-07-29 15:12:43,295 | INFO | tts.py | 127 | generate | /text-to-speech complete
2024-07-29 15:12:43,731 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:12:43,734 | DEBUG | tts.py | 121 | generate | using model: 
TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)
2024-07-29 15:12:43,767 | ERROR | tts.py | 73 | _generate | Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cuda:1! (when checking argument for argument index in method wrapper_CUDA__index_select)
2024-07-29 15:12:43,767 | ERROR | tts.py | 133 | generate | generate wave file failed.
2024-07-29 15:12:44,227 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:12:44,230 | DEBUG | tts.py | 121 | generate | using model: 
TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)
2024-07-29 15:12:44,255 | ERROR | tts.py | 73 | _generate | Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cuda:1! (when checking argument for argument index in method wrapper_CUDA__index_select)
2024-07-29 15:12:44,255 | ERROR | tts.py | 133 | generate | generate wave file failed.
2024-07-29 15:14:13,795 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:14:13,795 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:14:24,118 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:14:24,121 | DEBUG | tts.py | 121 | generate | using model: 
TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)
2024-07-29 15:14:24,121 | ERROR | tts.py | 73 | _generate | 'int' object has no attribute 'to'
2024-07-29 15:14:24,122 | ERROR | tts.py | 133 | generate | generate wave file failed.
2024-07-29 15:16:12,665 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:16:12,666 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:17:02,024 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:17:02,024 | DEBUG | tts.py | 121 | generate | using device: 
cuda:0
2024-07-29 15:17:05,727 | INFO | tts.py | 127 | generate | /text-to-speech complete
2024-07-29 15:17:13,779 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:17:13,779 | DEBUG | tts.py | 121 | generate | using device: 
cuda:0
2024-07-29 15:17:13,898 | INFO | tts.py | 127 | generate | /text-to-speech complete
2024-07-29 15:17:20,335 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:17:20,336 | DEBUG | tts.py | 121 | generate | using device: 
cuda:1
2024-07-29 15:17:20,367 | ERROR | tts.py | 73 | _generate | Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cuda:1! (when checking argument for argument index in method wrapper_CUDA__index_select)
2024-07-29 15:17:20,367 | ERROR | tts.py | 133 | generate | generate wave file failed.
2024-07-29 15:19:57,705 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:19:57,705 | INFO | tts.py | 43 | <module> | [TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
), TTS(
  (model): SynthesizerTrn(
    (enc_p): TextEncoder(
      (emb): Embedding(219, 192)
      (tone_emb): Embedding(16, 192)
      (language_emb): Embedding(10, 192)
      (bert_proj): Conv1d(1024, 192, kernel_size=(1,), stride=(1,))
      (ja_bert_proj): Conv1d(768, 192, kernel_size=(1,), stride=(1,))
      (encoder): Encoder(
        (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
        (drop): Dropout(p=0.1, inplace=False)
        (attn_layers): ModuleList(
          (0-5): 6 x MultiHeadAttention(
            (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_1): ModuleList(
          (0-5): 6 x LayerNorm()
        )
        (ffn_layers): ModuleList(
          (0-5): 6 x FFN(
            (conv_1): Conv1d(192, 768, kernel_size=(3,), stride=(1,))
            (conv_2): Conv1d(768, 192, kernel_size=(3,), stride=(1,))
            (drop): Dropout(p=0.1, inplace=False)
          )
        )
        (norm_layers_2): ModuleList(
          (0-5): 6 x LayerNorm()
        )
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (dec): Generator(
      (conv_pre): Conv1d(192, 512, kernel_size=(7,), stride=(1,), padding=(3,))
      (ups): ModuleList(
        (0): ConvTranspose1d(512, 256, kernel_size=(16,), stride=(8,), padding=(4,))
        (1): ConvTranspose1d(256, 128, kernel_size=(16,), stride=(8,), padding=(4,))
        (2): ConvTranspose1d(128, 64, kernel_size=(8,), stride=(2,), padding=(3,))
        (3): ConvTranspose1d(64, 32, kernel_size=(2,), stride=(2,))
        (4): ConvTranspose1d(32, 16, kernel_size=(2,), stride=(2,))
      )
      (resblocks): ModuleList(
        (0): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (1): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (2): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(256, 256, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (3): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (4): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (5): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(128, 128, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (6): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (7): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (8): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(64, 64, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (9): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (10): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (11): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(32, 32, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
        (12): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
            (1): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(5,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(3,), stride=(1,), padding=(1,))
          )
        )
        (13): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
            (1): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(9,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(15,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(7,), stride=(1,), padding=(3,))
          )
        )
        (14): ResBlock1(
          (convs1): ModuleList(
            (0): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
            (1): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(15,), dilation=(3,))
            (2): Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(25,), dilation=(5,))
          )
          (convs2): ModuleList(
            (0-2): 3 x Conv1d(16, 16, kernel_size=(11,), stride=(1,), padding=(5,))
          )
        )
      )
      (conv_post): Conv1d(16, 1, kernel_size=(7,), stride=(1,), padding=(3,), bias=False)
      (cond): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
    )
    (enc_q): PosteriorEncoder(
      (pre): Conv1d(1025, 192, kernel_size=(1,), stride=(1,))
      (enc): WN(
        (in_layers): ModuleList(
          (0-15): 16 x Conv1d(192, 384, kernel_size=(5,), stride=(1,), padding=(2,))
        )
        (res_skip_layers): ModuleList(
          (0-14): 15 x Conv1d(192, 384, kernel_size=(1,), stride=(1,))
          (15): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (drop): Dropout(p=0, inplace=False)
        (cond_layer): Conv1d(256, 6144, kernel_size=(1,), stride=(1,))
      )
      (proj): Conv1d(192, 384, kernel_size=(1,), stride=(1,))
    )
    (flow): TransformerCouplingBlock(
      (flows): ModuleList(
        (0): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (1): Flip()
        (2): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (3): Flip()
        (4): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (5): Flip()
        (6): TransformerCouplingLayer(
          (pre): Conv1d(96, 192, kernel_size=(1,), stride=(1,))
          (enc): Encoder(
            (spk_emb_linear): Linear(in_features=256, out_features=192, bias=True)
            (drop): Dropout(p=0.1, inplace=False)
            (attn_layers): ModuleList(
              (0-2): 3 x MultiHeadAttention(
                (conv_q): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_k): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_v): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (conv_o): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (ffn_layers): ModuleList(
              (0-2): 3 x FFN(
                (conv_1): Conv1d(192, 768, kernel_size=(5,), stride=(1,))
                (conv_2): Conv1d(768, 192, kernel_size=(5,), stride=(1,))
                (drop): Dropout(p=0.1, inplace=False)
              )
            )
            (norm_layers_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (post): Conv1d(192, 96, kernel_size=(1,), stride=(1,))
        )
        (7): Flip()
      )
    )
    (sdp): StochasticDurationPredictor(
      (log_flow): Log()
      (flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (post_pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
      (post_proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (post_convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (post_flows): ModuleList(
        (0): ElementwiseAffine()
        (1): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (2): Flip()
        (3): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (4): Flip()
        (5): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (6): Flip()
        (7): ConvFlow(
          (pre): Conv1d(1, 192, kernel_size=(1,), stride=(1,))
          (convs): DDSConv(
            (drop): Dropout(p=0.0, inplace=False)
            (convs_sep): ModuleList(
              (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
              (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
              (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
            )
            (convs_1x1): ModuleList(
              (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
            )
            (norms_1): ModuleList(
              (0-2): 3 x LayerNorm()
            )
            (norms_2): ModuleList(
              (0-2): 3 x LayerNorm()
            )
          )
          (proj): Conv1d(192, 29, kernel_size=(1,), stride=(1,))
        )
        (8): Flip()
      )
      (pre): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (proj): Conv1d(192, 192, kernel_size=(1,), stride=(1,))
      (convs): DDSConv(
        (drop): Dropout(p=0.5, inplace=False)
        (convs_sep): ModuleList(
          (0): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(1,), groups=192)
          (1): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(3,), dilation=(3,), groups=192)
          (2): Conv1d(192, 192, kernel_size=(3,), stride=(1,), padding=(9,), dilation=(9,), groups=192)
        )
        (convs_1x1): ModuleList(
          (0-2): 3 x Conv1d(192, 192, kernel_size=(1,), stride=(1,))
        )
        (norms_1): ModuleList(
          (0-2): 3 x LayerNorm()
        )
        (norms_2): ModuleList(
          (0-2): 3 x LayerNorm()
        )
      )
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (dp): DurationPredictor(
      (drop): Dropout(p=0.5, inplace=False)
      (conv_1): Conv1d(192, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_1): LayerNorm()
      (conv_2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,))
      (norm_2): LayerNorm()
      (proj): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      (cond): Conv1d(256, 192, kernel_size=(1,), stride=(1,))
    )
    (emb_g): Embedding(256, 256)
  )
)]
2024-07-29 15:20:15,727 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:20:15,727 | DEBUG | tts.py | 121 | generate | using device: 
cuda:1
2024-07-29 15:20:19,478 | INFO | tts.py | 127 | generate | /text-to-speech complete
2024-07-29 15:20:20,464 | INFO | tts.py | 106 | generate | /text-to-speech
2024-07-29 15:20:20,464 | DEBUG | tts.py | 121 | generate | using device: 
cuda:0
2024-07-29 15:20:20,496 | ERROR | tts.py | 73 | _generate | Expected all tensors to be on the same device, but found at least two devices, cuda:1 and cuda:0! (when checking argument for argument index in method wrapper_CUDA__index_select)
2024-07-29 15:20:20,496 | ERROR | tts.py | 133 | generate | generate wave file failed.
2024-07-29 15:22:17,163 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:22:58,017 | INFO | tts.py | 42 | <module> | =================== tts korean models ===================
2024-07-29 15:22:58,017 | INFO | tts.py | 44 | <module> | init model device: cuda:0
2024-07-29 15:22:58,017 | INFO | tts.py | 44 | <module> | init model device: cuda:1
2024-07-29 15:23:22,543 | INFO | tts.py | 107 | generate | /text-to-speech
2024-07-29 15:23:22,543 | DEBUG | tts.py | 122 | generate | using device: cuda:0
2024-07-29 15:23:26,189 | INFO | tts.py | 128 | generate | /text-to-speech complete
2024-07-29 15:23:27,562 | INFO | tts.py | 107 | generate | /text-to-speech
2024-07-29 15:23:27,562 | DEBUG | tts.py | 122 | generate | using device: cuda:1
2024-07-29 15:23:27,596 | ERROR | tts.py | 74 | _generate | Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cuda:1! (when checking argument for argument index in method wrapper_CUDA__index_select)
2024-07-29 15:23:27,596 | ERROR | tts.py | 134 | generate | generate wave file failed.
2024-07-29 15:23:28,919 | INFO | tts.py | 107 | generate | /text-to-speech
2024-07-29 15:23:28,919 | DEBUG | tts.py | 122 | generate | using device: cuda:0
2024-07-29 15:23:29,038 | INFO | tts.py | 128 | generate | /text-to-speech complete
2024-07-29 15:23:29,482 | INFO | tts.py | 107 | generate | /text-to-speech
2024-07-29 15:23:29,482 | DEBUG | tts.py | 122 | generate | using device: cuda:1
2024-07-29 15:23:29,506 | ERROR | tts.py | 74 | _generate | Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cuda:1! (when checking argument for argument index in method wrapper_CUDA__index_select)
2024-07-29 15:23:29,506 | ERROR | tts.py | 134 | generate | generate wave file failed.
2024-07-29 15:23:30,198 | INFO | tts.py | 107 | generate | /text-to-speech
2024-07-29 15:23:30,198 | DEBUG | tts.py | 122 | generate | using device: cuda:0
2024-07-29 15:23:30,315 | INFO | tts.py | 128 | generate | /text-to-speech complete
2024-07-29 15:23:54,206 | INFO | tts.py | 43 | <module> | =================== tts korean models ===================
2024-07-29 15:23:54,207 | INFO | tts.py | 45 | <module> | init model device: cuda:0
2024-07-29 15:24:02,589 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:24:02,590 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:24:06,265 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:24:47,299 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:24:47,299 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:24:47,380 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:24:48,309 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:24:48,309 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:24:48,425 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:24:49,013 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:24:49,013 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:24:49,127 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:24:49,666 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:24:49,666 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:24:49,742 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:24:50,226 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:24:50,226 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:24:50,344 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:24:50,724 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:24:50,724 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:24:50,845 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:25:11,028 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:25:11,028 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:25:11,300 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:25:15,751 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:25:15,752 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:25:16,131 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:25:16,871 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:25:16,871 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:25:17,128 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:25:17,648 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:25:17,649 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:25:17,909 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:25:18,399 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:25:18,399 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:25:18,622 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:25:19,093 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:25:19,093 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:25:19,356 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:25:19,775 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:25:19,775 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:25:20,001 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:25:20,494 | INFO | tts.py | 108 | generate | /text-to-speech
2024-07-29 15:25:20,494 | DEBUG | tts.py | 123 | generate | using device: cuda:0
2024-07-29 15:25:20,717 | INFO | tts.py | 129 | generate | /text-to-speech complete
2024-07-29 15:35:07,979 | INFO | tts.py | 45 | <module> | =================== tts korean models ===================
2024-07-29 15:35:07,979 | INFO | tts.py | 47 | <module> | init model device: cuda:0
2024-07-29 15:35:18,876 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:35:18,876 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:35:22,804 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:35:45,881 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:35:45,881 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:35:46,147 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:35:47,463 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:35:47,463 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:35:47,731 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:35:48,189 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:35:48,189 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:35:48,455 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:35:48,890 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:35:48,890 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:35:49,151 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:35:49,556 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:35:49,556 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:35:49,819 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:36:23,067 | INFO | tts.py | 45 | <module> | =================== tts korean models ===================
2024-07-29 15:36:23,067 | INFO | tts.py | 47 | <module> | init model device: cuda:0
2024-07-29 15:36:31,355 | INFO | tts.py | 45 | <module> | =================== tts korean models ===================
2024-07-29 15:36:31,355 | INFO | tts.py | 47 | <module> | init model device: cuda:0
2024-07-29 15:36:32,256 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:36:32,256 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:36:36,178 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:36:36,595 | INFO | tts.py | 45 | <module> | =================== tts korean models ===================
2024-07-29 15:36:36,595 | INFO | tts.py | 47 | <module> | init model device: cuda:0
2024-07-29 15:37:09,740 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:09,740 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:10,022 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:10,592 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:10,592 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:10,856 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:11,496 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:11,496 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:15,252 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:15,945 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:15,945 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:16,209 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:17,113 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:17,114 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:17,378 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:17,923 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:17,923 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:18,147 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:18,739 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:18,739 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:19,000 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:19,622 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:19,622 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:19,845 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:20,578 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:20,578 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:20,798 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:21,382 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:21,382 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:21,643 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:22,209 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:22,209 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:22,431 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:23,073 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:23,074 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:23,295 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:23,941 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:23,941 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:24,202 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:24,784 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:24,784 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:25,029 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:25,573 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:25,573 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:25,834 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:26,330 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:26,330 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:26,557 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:27,136 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:27,136 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:27,354 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:27,888 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:27,888 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:28,151 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:28,686 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:28,686 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:28,946 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:29,478 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:29,479 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:29,701 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:30,217 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:30,217 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:30,482 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:30,950 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:30,950 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:31,212 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:31,860 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:31,860 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:32,120 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:32,649 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:32,649 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:33,009 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:33,426 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:33,426 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:33,648 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:34,395 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:34,395 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:34,616 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:35,235 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:35,235 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:35,503 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:35,954 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:35,954 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:36,180 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:36,771 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:36,771 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:36,999 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:37,527 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:37,527 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:37,891 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:38,361 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:38,361 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:38,584 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:38,995 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:38,995 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:39,221 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:39,781 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:39,781 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:40,053 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:40,649 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:40,649 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:40,914 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:41,427 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:41,427 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:41,651 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:42,200 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:42,200 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:42,422 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:42,979 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:42,979 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:43,200 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:43,772 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:43,772 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:43,992 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:44,605 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:44,605 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:44,867 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:45,393 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:45,393 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:45,614 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:46,176 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:46,176 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:46,504 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:46,847 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:46,847 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:47,068 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:47,569 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:47,569 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:47,827 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:48,344 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:48,344 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:48,657 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:49,073 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:49,073 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:49,296 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:49,748 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:49,748 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:49,967 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:50,492 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:50,492 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:50,795 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:51,249 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:51,249 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:51,469 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:52,058 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:52,058 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:52,358 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:52,867 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:52,867 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:53,087 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:53,673 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:53,673 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:53,895 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:54,360 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:54,360 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:54,577 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:55,162 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:55,162 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:55,380 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:55,935 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:55,935 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:56,160 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:56,609 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:56,609 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:56,831 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:37:57,398 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:37:57,399 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:37:57,657 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:39:07,993 | INFO | tts.py | 45 | <module> | =================== tts korean models ===================
2024-07-29 15:39:07,993 | INFO | tts.py | 47 | <module> | init model device: cuda:0
2024-07-29 15:39:16,313 | INFO | tts.py | 45 | <module> | =================== tts korean models ===================
2024-07-29 15:39:16,313 | INFO | tts.py | 47 | <module> | init model device: cuda:0
2024-07-29 15:39:21,519 | INFO | tts.py | 45 | <module> | =================== tts korean models ===================
2024-07-29 15:39:21,519 | INFO | tts.py | 47 | <module> | init model device: cuda:0
2024-07-29 15:40:27,268 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:40:27,268 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:40:31,154 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:40:38,512 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:40:38,512 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:40:42,413 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:40:42,979 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:40:42,979 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:40:43,245 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:40:47,619 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:40:47,619 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:40:47,882 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:40:48,570 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:40:48,570 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:40:48,830 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:40:49,489 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:40:49,489 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:40:49,756 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:40:50,345 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:40:50,345 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:40:50,565 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:40:51,099 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:40:51,099 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:40:51,445 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:40:52,055 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:40:52,056 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:40:52,315 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:40:52,945 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:40:52,945 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:40:53,161 | INFO | tts.py | 139 | generate | /text-to-speech complete
2024-07-29 15:40:53,870 | INFO | tts.py | 118 | generate | /text-to-speech
2024-07-29 15:40:53,870 | DEBUG | tts.py | 133 | generate | using device: cuda:0
2024-07-29 15:40:54,090 | INFO | tts.py | 139 | generate | /text-to-speech complete
